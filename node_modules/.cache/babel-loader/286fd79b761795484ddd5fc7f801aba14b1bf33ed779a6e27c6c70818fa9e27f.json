{"ast":null,"code":"var _jsxFileName = \"E:\\\\smartphone-image-app\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, CartesianGrid, ResponsiveContainer } from 'recharts';\nimport { toPng } from 'html-to-image';\nimport jsPDF from 'jspdf';\nimport { CSVLink } from 'react-csv';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [image, setImage] = useState(null);\n  const [message, setMessage] = useState('');\n  const [brand, setBrand] = useState('iPhone');\n  const [images, setImages] = useState([]);\n  const [analysis, setAnalysis] = useState({});\n  const [brandSharpness, setBrandSharpness] = useState([]);\n  const [selectedBrand, setSelectedBrand] = useState('All');\n  const [comparison, setComparison] = useState({});\n  const chartRef = useRef(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!image) return alert('Please select an image');\n    const formData = new FormData();\n    formData.append('image', image);\n    formData.append('brand', brand);\n    try {\n      const res = await axios.post('http://localhost:5000/upload', formData);\n      setMessage(res.data.message);\n      setImage(null);\n      fetchImages();\n    } catch (err) {\n      console.error(err);\n      setMessage('Upload failed');\n    }\n  };\n  const fetchImages = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/images');\n      setImages(res.data);\n    } catch (err) {\n      console.error('Failed to fetch images', err);\n    }\n  };\n  useEffect(() => {\n    fetchImages();\n  }, []);\n  const analyzeImage = async img => {\n    try {\n      const filenameWithoutPrefix = img.filename.replace(/^processed-/, '');\n      const res = await axios.get(`http://localhost:5000/analyze/processed/${filenameWithoutPrefix}`);\n      setAnalysis(prev => ({\n        ...prev,\n        [img.filename]: res.data.metrics\n      }));\n    } catch (err) {\n      console.error('Analysis failed:', err);\n      alert('Analysis failed.');\n    }\n  };\n  const analyzeAllImages = async () => {\n    const brandGroups = {};\n    for (let img of images) {\n      const filename = img.filename.replace(/^processed-/, '');\n      try {\n        const res = await axios.get(`http://localhost:5000/analyze/processed/${filename}`);\n        const {\n          variance,\n          mean,\n          contrastEstimate\n        } = res.data.metrics;\n        if (!brandGroups[img.brand]) {\n          brandGroups[img.brand] = [];\n        }\n        brandGroups[img.brand].push({\n          sharpness: parseFloat(variance),\n          brightness: parseFloat(mean),\n          contrast: parseFloat(contrastEstimate)\n        });\n      } catch (err) {\n        console.error(`Error analyzing ${filename}:`, err.message);\n      }\n    }\n    const result = Object.entries(brandGroups).map(([brand, entries]) => {\n      const count = entries.length;\n      const avgSharpness = entries.reduce((sum, x) => sum + x.sharpness, 0) / count;\n      const avgBrightness = entries.reduce((sum, x) => sum + x.brightness, 0) / count;\n      const avgContrast = entries.reduce((sum, x) => sum + x.contrast, 0) / count;\n      return {\n        brand,\n        averageSharpness: parseFloat(avgSharpness.toFixed(2)),\n        averageBrightness: parseFloat(avgBrightness.toFixed(2)),\n        averageContrast: parseFloat(avgContrast.toFixed(2))\n      };\n    }).sort((a, b) => b.averageSharpness - a.averageSharpness);\n    setBrandSharpness(result);\n  };\n  const compareWithBrandAverage = img => {\n    const imgData = analysis[img.filename];\n    if (!imgData) return;\n    const brandData = brandSharpness.find(b => b.brand === img.brand);\n    if (!brandData) return;\n    const sharpnessDiff = imgData.variance - brandData.averageSharpness;\n    const brightnessDiff = imgData.mean - brandData.averageBrightness;\n    const contrastDiff = imgData.contrastEstimate - brandData.averageContrast;\n    setComparison(prev => ({\n      ...prev,\n      [img.filename]: {\n        sharpness: sharpnessDiff.toFixed(2),\n        brightness: brightnessDiff.toFixed(2),\n        contrast: contrastDiff.toFixed(2)\n      }\n    }));\n  };\n  const downloadChartAsPNG = () => {\n    if (chartRef.current === null) return;\n    toPng(chartRef.current).then(dataUrl => {\n      const link = document.createElement('a');\n      link.download = 'sharpness-chart.png';\n      link.href = dataUrl;\n      link.click();\n    }).catch(err => {\n      console.error('Error downloading PNG:', err);\n    });\n  };\n  const downloadChartAsPDF = () => {\n    if (chartRef.current === null) return;\n    toPng(chartRef.current).then(dataUrl => {\n      const pdf = new jsPDF();\n      const imgProps = pdf.getImageProperties(dataUrl);\n      const pdfWidth = pdf.internal.pageSize.getWidth();\n      const pdfHeight = imgProps.height * pdfWidth / imgProps.width;\n      pdf.addImage(dataUrl, 'PNG', 0, 0, pdfWidth, pdfHeight);\n      pdf.save('sharpness-chart.pdf');\n    }).catch(err => {\n      console.error('Error downloading PDF:', err);\n    });\n  };\n  const filteredImages = selectedBrand === 'All' ? images : images.filter(img => img.brand === selectedBrand);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"\\uD83D\\uDCF1 Smartphone Image Processor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setImage(e.target.files[0]),\n        className: \"form-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setBrand(e.target.value),\n        className: \"form-select\",\n        value: brand,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"iPhone\",\n          children: \"iPhone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Samsung\",\n          children: \"Samsung\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Pixel\",\n          children: \"Pixel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Xiaomi\",\n          children: \"Xiaomi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-blue\",\n        children: \"Upload & Process\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"form-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toolbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: analyzeAllImages,\n        className: \"btn btn-green\",\n        children: \"\\uD83D\\uDCCA Compare Sharpness by Brand\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), brandSharpness.length > 0 && /*#__PURE__*/_jsxDEV(CSVLink, {\n        data: brandSharpness,\n        filename: \"sharpness-report.csv\",\n        className: \"btn btn-yellow\",\n        children: \"\\uD83D\\uDCE5 Export CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-select\",\n        value: selectedBrand,\n        onChange: e => setSelectedBrand(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"All\",\n          children: \"All Brands\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"iPhone\",\n          children: \"iPhone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Samsung\",\n          children: \"Samsung\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Pixel\",\n          children: \"Pixel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Xiaomi\",\n          children: \"Xiaomi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), brandSharpness.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      ref: chartRef,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"chart-title\",\n        children: \"\\uD83D\\uDCCA Average Sharpness by Brand\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: brandSharpness,\n          margin: {\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"brand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"averageSharpness\",\n            fill: \"#2563EB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: downloadChartAsPNG,\n          className: \"btn btn-blue\",\n          children: \"\\u2B07\\uFE0F Download as PNG\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: downloadChartAsPDF,\n          className: \"btn btn-red\",\n          children: \"\\uD83D\\uDCC4 Download as PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"section-title\",\n      children: \"\\uD83D\\uDDBC Uploaded Images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-grid\",\n      children: filteredImages.map(img => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"image-brand\",\n          children: img.brand\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"image-date\",\n          children: new Date(img.processedAt).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-pair\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-side\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"image-label\",\n              children: \"Original\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `http://localhost:5000/uploads/${img.originalName}`,\n              alt: \"original\",\n              className: \"image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-side\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"image-label\",\n              children: \"Processed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `http://localhost:5000/uploads/${img.filename}`,\n              alt: \"processed\",\n              className: \"image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => compareWithBrandAverage(img),\n          className: \"btn btn-green\",\n          children: \"\\uD83D\\uDD0D Compare with Brand Average\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 3\n        }, this), comparison[img.filename] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comparison-results\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uD83D\\uDFE2 Sharpness \\u0394: \", comparison[img.filename].sharpness]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uD83D\\uDD06 Brightness \\u0394: \", comparison[img.filename].brightness]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u26AB Contrast \\u0394: \", comparison[img.filename].contrast]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => analyzeImage(img),\n          id: \"buttonanalyze\",\n          children: \"Analyze Processed Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this), analysis[img.filename] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-metrics\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uD83D\\uDCC8 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Sharpness:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 23\n            }, this), \" \", analysis[img.filename].variance]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uD83C\\uDF17 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Brightness:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 23\n            }, this), \" \", analysis[img.filename].mean]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uD83C\\uDF13 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Contrast Estimate:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 23\n            }, this), \" \", analysis[img.filename].contrastEstimate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 15\n        }, this)]\n      }, img._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WyC/XYt6+nQ1EYpaBDibx10d8J4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","useRef","axios","BarChart","Bar","XAxis","YAxis","Tooltip","CartesianGrid","ResponsiveContainer","toPng","jsPDF","CSVLink","jsxDEV","_jsxDEV","App","_s","image","setImage","message","setMessage","brand","setBrand","images","setImages","analysis","setAnalysis","brandSharpness","setBrandSharpness","selectedBrand","setSelectedBrand","comparison","setComparison","chartRef","handleSubmit","e","preventDefault","alert","formData","FormData","append","res","post","data","fetchImages","err","console","error","get","analyzeImage","img","filenameWithoutPrefix","filename","replace","prev","metrics","analyzeAllImages","brandGroups","variance","mean","contrastEstimate","push","sharpness","parseFloat","brightness","contrast","result","Object","entries","map","count","length","avgSharpness","reduce","sum","x","avgBrightness","avgContrast","averageSharpness","toFixed","averageBrightness","averageContrast","sort","a","b","compareWithBrandAverage","imgData","brandData","find","sharpnessDiff","brightnessDiff","contrastDiff","downloadChartAsPNG","current","then","dataUrl","link","document","createElement","download","href","click","catch","downloadChartAsPDF","pdf","imgProps","getImageProperties","pdfWidth","internal","pageSize","getWidth","pdfHeight","height","width","addImage","save","filteredImages","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","target","files","value","onClick","ref","margin","top","right","left","bottom","strokeDasharray","dataKey","fill","Date","processedAt","toLocaleString","src","originalName","alt","id","_id","_c","$RefreshReg$"],"sources":["E:/smartphone-image-app/client/src/App.js"],"sourcesContent":["import { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  Tooltip,\n  CartesianGrid,\n  ResponsiveContainer,\n} from 'recharts';\nimport { toPng } from 'html-to-image';\nimport jsPDF from 'jspdf';\nimport { CSVLink } from 'react-csv';\n\nfunction App() {\n  const [image, setImage] = useState(null);\n  const [message, setMessage] = useState('');\n  const [brand, setBrand] = useState('iPhone');\n  const [images, setImages] = useState([]);\n  const [analysis, setAnalysis] = useState({});\n  const [brandSharpness, setBrandSharpness] = useState([]);\n  const [selectedBrand, setSelectedBrand] = useState('All');\n  const [comparison, setComparison] = useState({});\n  const chartRef = useRef(null);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!image) return alert('Please select an image');\n\n    const formData = new FormData();\n    formData.append('image', image);\n    formData.append('brand', brand);\n\n    try {\n      const res = await axios.post('http://localhost:5000/upload', formData);\n      setMessage(res.data.message);\n      setImage(null);\n      fetchImages();\n    } catch (err) {\n      console.error(err);\n      setMessage('Upload failed');\n    }\n  };\n\n  const fetchImages = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/images');\n      setImages(res.data);\n    } catch (err) {\n      console.error('Failed to fetch images', err);\n    }\n  };\n\n  useEffect(() => {\n    fetchImages();\n  }, []);\n\n  const analyzeImage = async (img) => {\n    try {\n      const filenameWithoutPrefix = img.filename.replace(/^processed-/, '');\n      const res = await axios.get(\n        `http://localhost:5000/analyze/processed/${filenameWithoutPrefix}`\n      );\n      setAnalysis((prev) => ({\n        ...prev,\n        [img.filename]: res.data.metrics,\n      }));\n    } catch (err) {\n      console.error('Analysis failed:', err);\n      alert('Analysis failed.');\n    }\n  };\n\n  const analyzeAllImages = async () => {\n  const brandGroups = {};\n\n  for (let img of images) {\n    const filename = img.filename.replace(/^processed-/, '');\n    try {\n      const res = await axios.get(`http://localhost:5000/analyze/processed/${filename}`);\n      const { variance, mean, contrastEstimate } = res.data.metrics;\n\n      if (!brandGroups[img.brand]) {\n        brandGroups[img.brand] = [];\n      }\n\n      brandGroups[img.brand].push({\n        sharpness: parseFloat(variance),\n        brightness: parseFloat(mean),\n        contrast: parseFloat(contrastEstimate)\n      });\n    } catch (err) {\n      console.error(`Error analyzing ${filename}:`, err.message);\n    }\n  }\n\n  const result = Object.entries(brandGroups).map(([brand, entries]) => {\n    const count = entries.length;\n    const avgSharpness = entries.reduce((sum, x) => sum + x.sharpness, 0) / count;\n    const avgBrightness = entries.reduce((sum, x) => sum + x.brightness, 0) / count;\n    const avgContrast = entries.reduce((sum, x) => sum + x.contrast, 0) / count;\n\n    return {\n      brand,\n      averageSharpness: parseFloat(avgSharpness.toFixed(2)),\n      averageBrightness: parseFloat(avgBrightness.toFixed(2)),\n      averageContrast: parseFloat(avgContrast.toFixed(2))\n    };\n  }).sort((a, b) => b.averageSharpness - a.averageSharpness);\n\n  setBrandSharpness(result);\n};\nconst compareWithBrandAverage = (img) => {\n  const imgData = analysis[img.filename];\n  if (!imgData) return;\n\n  const brandData = brandSharpness.find(b => b.brand === img.brand);\n  if (!brandData) return;\n\n  const sharpnessDiff = imgData.variance - brandData.averageSharpness;\n  const brightnessDiff = imgData.mean - brandData.averageBrightness;\n  const contrastDiff = imgData.contrastEstimate - brandData.averageContrast;\n\n  setComparison(prev => ({\n    ...prev,\n    [img.filename]: {\n      sharpness: sharpnessDiff.toFixed(2),\n      brightness: brightnessDiff.toFixed(2),\n      contrast: contrastDiff.toFixed(2)\n    }\n  }));\n};\n\n  const downloadChartAsPNG = () => {\n    if (chartRef.current === null) return;\n    toPng(chartRef.current)\n      .then((dataUrl) => {\n        const link = document.createElement('a');\n        link.download = 'sharpness-chart.png';\n        link.href = dataUrl;\n        link.click();\n      })\n      .catch((err) => {\n        console.error('Error downloading PNG:', err);\n      });\n  };\n\n  const downloadChartAsPDF = () => {\n    if (chartRef.current === null) return;\n    toPng(chartRef.current)\n      .then((dataUrl) => {\n        const pdf = new jsPDF();\n        const imgProps = pdf.getImageProperties(dataUrl);\n        const pdfWidth = pdf.internal.pageSize.getWidth();\n        const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;\n\n        pdf.addImage(dataUrl, 'PNG', 0, 0, pdfWidth, pdfHeight);\n        pdf.save('sharpness-chart.pdf');\n      })\n      .catch((err) => {\n        console.error('Error downloading PDF:', err);\n      });\n  };\n\n  const filteredImages = selectedBrand === 'All' ? images : images.filter(img => img.brand === selectedBrand);\n\n  return (\n    <div className=\"app-wrapper\">\n      <h1 className=\"title\">📱 Smartphone Image Processor</h1>\n\n      <form onSubmit={handleSubmit} className=\"form-container\">\n        <input\n          type=\"file\"\n          onChange={(e) => setImage(e.target.files[0])}\n          className=\"form-input\"\n        />\n        <select\n          onChange={(e) => setBrand(e.target.value)}\n          className=\"form-select\"\n          value={brand}\n        >\n          <option value=\"iPhone\">iPhone</option>\n          <option value=\"Samsung\">Samsung</option>\n          <option value=\"Pixel\">Pixel</option>\n          <option value=\"Xiaomi\">Xiaomi</option>\n        </select>\n        <button type=\"submit\" className=\"btn btn-blue\">\n          Upload & Process\n        </button>\n        {message && <p className=\"form-message\">{message}</p>}\n      </form>\n\n      <div className=\"toolbar\">\n        <button onClick={analyzeAllImages} className=\"btn btn-green\">\n          📊 Compare Sharpness by Brand\n        </button>\n        {brandSharpness.length > 0 && (\n          <CSVLink\n            data={brandSharpness}\n            filename=\"sharpness-report.csv\"\n            className=\"btn btn-yellow\"\n          >\n            📥 Export CSV\n          </CSVLink>\n        )}\n        <select\n          className=\"form-select\"\n          value={selectedBrand}\n          onChange={(e) => setSelectedBrand(e.target.value)}\n        >\n          <option value=\"All\">All Brands</option>\n          <option value=\"iPhone\">iPhone</option>\n          <option value=\"Samsung\">Samsung</option>\n          <option value=\"Pixel\">Pixel</option>\n          <option value=\"Xiaomi\">Xiaomi</option>\n        </select>\n      </div>\n\n      {brandSharpness.length > 0 && (\n        <div className=\"chart-container\" ref={chartRef}>\n          <h2 className=\"chart-title\">📊 Average Sharpness by Brand</h2>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <BarChart data={brandSharpness} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"brand\" />\n              <YAxis />\n              <Tooltip />\n              <Bar dataKey=\"averageSharpness\" fill=\"#2563EB\" />\n            </BarChart>\n          </ResponsiveContainer>\n          <div className=\"chart-buttons\">\n            <button onClick={downloadChartAsPNG} className=\"btn btn-blue\">\n              ⬇️ Download as PNG\n            </button>\n            <button onClick={downloadChartAsPDF} className=\"btn btn-red\">\n              📄 Download as PDF\n            </button>\n          </div>\n        </div>\n      )}\n\n      <h2 className=\"section-title\">🖼 Uploaded Images</h2>\n      <div className=\"image-grid\">\n        {filteredImages.map((img) => (\n          <div key={img._id} className=\"image-card\">\n            <h3 className=\"image-brand\">{img.brand}</h3>\n            <p className=\"image-date\">{new Date(img.processedAt).toLocaleString()}</p>\n            <div className=\"image-pair\">\n              <div className=\"image-side\">\n                <p className=\"image-label\">Original</p>\n                <img src={`http://localhost:5000/uploads/${img.originalName}`} alt=\"original\" className=\"image\" />\n              </div>\n              <div className=\"image-side\">\n                <p className=\"image-label\">Processed</p>\n                <img src={`http://localhost:5000/uploads/${img.filename}`} alt=\"processed\" className=\"image\" />\n              </div>\n            </div>\n  <button onClick={() => compareWithBrandAverage(img)} className=\"btn btn-green\">\n  🔍 Compare with Brand Average\n</button>\n\n{comparison[img.filename] && (\n  <div className=\"comparison-results\">\n    <p>🟢 Sharpness Δ: {comparison[img.filename].sharpness}</p>\n    <p>🔆 Brightness Δ: {comparison[img.filename].brightness}</p>\n    <p>⚫ Contrast Δ: {comparison[img.filename].contrast}</p>\n  </div>\n)}\n\n            <button onClick={() => analyzeImage(img)} id='buttonanalyze'>\n              Analyze Processed Image\n            </button>\n            {analysis[img.filename] && (\n              <div className=\"image-metrics\">\n                <p>📈 <strong>Sharpness:</strong> {analysis[img.filename].variance}</p>\n                <p>🌗 <strong>Brightness:</strong> {analysis[img.filename].mean}</p>\n                <p>🌓 <strong>Contrast Estimate:</strong> {analysis[img.filename].contrastEstimate}</p>\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
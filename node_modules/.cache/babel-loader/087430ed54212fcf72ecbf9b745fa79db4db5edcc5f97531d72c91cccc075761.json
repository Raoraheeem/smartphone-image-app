{"ast":null,"code":"var _jsxFileName = \"E:\\\\smartphone-image-app\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, CartesianGrid, ResponsiveContainer } from 'recharts';\nimport { toPng } from 'html-to-image';\nimport jsPDF from 'jspdf';\nimport { CSVLink } from 'react-csv';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [image, setImage] = useState(null);\n  const [message, setMessage] = useState('');\n  const [brand, setBrand] = useState('iPhone');\n  const [images, setImages] = useState([]);\n  const [analysis, setAnalysis] = useState({});\n  const [brandSharpness, setBrandSharpness] = useState([]);\n  const [selectedBrand, setSelectedBrand] = useState('All');\n  const chartRef = useRef(null);\n\n  // ✅ Live backend base URL from env\n  const apiBaseUrl = process.env.REACT_APP_API_URL;\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!image) return alert('Please select an image');\n    const formData = new FormData();\n    formData.append('image', image);\n    formData.append('brand', brand);\n    try {\n      const res = await axios.post(`${apiBaseUrl}/upload`, formData);\n      setMessage(res.data.message);\n      setImage(null);\n      fetchImages();\n    } catch (err) {\n      console.error(err);\n      setMessage('Upload failed');\n    }\n  };\n  const fetchImages = async () => {\n    try {\n      const res = await axios.get(`${apiBaseUrl}/images`);\n      setImages(res.data);\n    } catch (err) {\n      console.error('Failed to fetch images', err);\n    }\n  };\n  useEffect(() => {\n    fetchImages();\n  }, []);\n  const analyzeImage = async img => {\n    try {\n      const filenameWithoutPrefix = img.filename.replace(/^processed-/, '');\n      const res = await axios.get(`${apiBaseUrl}/analyze/processed/${filenameWithoutPrefix}`);\n      setAnalysis(prev => ({\n        ...prev,\n        [img.filename]: res.data.metrics\n      }));\n    } catch (err) {\n      console.error('Analysis failed:', err);\n      alert('Analysis failed.');\n    }\n  };\n  const analyzeAllImages = async () => {\n    const brandGroups = {};\n    for (let img of images) {\n      const filename = img.filename;\n      const filenameWithoutPrefix = filename.replace(/^processed-/, '');\n      try {\n        const res = await axios.get(`${apiBaseUrl}/analyze/processed/${filenameWithoutPrefix}`);\n        const variance = parseFloat(res.data.metrics.variance);\n        const mean = parseFloat(res.data.metrics.mean);\n        const contrastEstimate = parseFloat(res.data.metrics.contrastEstimate);\n        if (!brandGroups[img.brand]) {\n          brandGroups[img.brand] = [];\n        }\n        brandGroups[img.brand].push({\n          variance,\n          mean,\n          contrastEstimate\n        });\n      } catch (err) {\n        console.error(`Error analyzing ${filename}:`, err.message);\n      }\n    }\n    const result = Object.entries(brandGroups).map(([brand, stats]) => {\n      const avgSharpness = stats.reduce((sum, v) => sum + v.variance, 0) / stats.length;\n      const avgBrightness = stats.reduce((sum, v) => sum + v.mean, 0) / stats.length;\n      const avgContrast = stats.reduce((sum, v) => sum + v.contrastEstimate, 0) / stats.length;\n      return {\n        brand,\n        averageSharpness: parseFloat(avgSharpness.toFixed(2)),\n        averageBrightness: parseFloat(avgBrightness.toFixed(2)),\n        averageContrast: parseFloat(avgContrast.toFixed(2))\n      };\n    }).sort((a, b) => b.averageSharpness - a.averageSharpness);\n    setBrandSharpness(result);\n  };\n  const downloadChartAsPNG = () => {\n    if (chartRef.current === null) return;\n    toPng(chartRef.current).then(dataUrl => {\n      const link = document.createElement('a');\n      link.download = 'Comparison-chart.png';\n      link.href = dataUrl;\n      link.click();\n    }).catch(err => {\n      console.error('Error downloading PNG:', err);\n    });\n  };\n  const downloadChartAsPDF = () => {\n    if (chartRef.current === null) return;\n    toPng(chartRef.current).then(dataUrl => {\n      const pdf = new jsPDF();\n      const imgProps = pdf.getImageProperties(dataUrl);\n      const pdfWidth = pdf.internal.pageSize.getWidth();\n      const pdfHeight = imgProps.height * pdfWidth / imgProps.width;\n      pdf.addImage(dataUrl, 'PNG', 0, 0, pdfWidth, pdfHeight);\n      pdf.save('Comparison-chart.pdf');\n    }).catch(err => {\n      console.error('Error downloading PDF:', err);\n    });\n  };\n  const filteredImages = selectedBrand === 'All' ? images : images.filter(img => img.brand === selectedBrand);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83D\\uDCF1 Smartphone Image Processor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setImage(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setBrand(e.target.value),\n        value: brand,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"iPhone\",\n          children: \"iPhone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Samsung\",\n          children: \"Samsung\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Pixel\",\n          children: \"Pixel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Xiaomi\",\n          children: \"Xiaomi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn blue\",\n        children: \"Upload & Process\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message success\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: analyzeAllImages,\n        className: \"btn green\",\n        children: \"\\uD83D\\uDCCA Compare by Brand\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), brandSharpness.length > 0 && /*#__PURE__*/_jsxDEV(CSVLink, {\n        data: brandSharpness,\n        filename: \"sharpness-report.csv\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"csv\",\n          children: \" \\uD83D\\uDCE5 Export CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"brand-filter\",\n        value: selectedBrand,\n        onChange: e => setSelectedBrand(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"All\",\n          children: \"All Brands\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"iPhone\",\n          children: \"iPhone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Samsung\",\n          children: \"Samsung\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Pixel\",\n          children: \"Pixel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Xiaomi\",\n          children: \"Xiaomi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), brandSharpness.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-wrapper\",\n      ref: chartRef,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83D\\uDCCA Average Metrics by Brand\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: brandSharpness,\n          margin: {\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"brand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"averageSharpness\",\n            fill: \"#2563EB\",\n            name: \"Sharpness\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"averageBrightness\",\n            fill: \"#F59E0B\",\n            name: \"Brightness\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"averageContrast\",\n            fill: \"#10B981\",\n            name: \"Contrast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: downloadChartAsPNG,\n          id: \"png\",\n          children: \"\\u2B07\\uFE0F Download as PNG\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: downloadChartAsPDF,\n          id: \"pdf\",\n          children: \"\\uD83D\\uDCC4 Download as PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDDBC Uploaded Images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-gallery\",\n      children: filteredImages.map(img => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: img.brand\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: new Date(img.processedAt).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-wrap\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Original\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `${apiBaseUrl}/uploads/${img.originalName}`,\n              alt: \"original\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Processed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `${apiBaseUrl}/uploads/${img.filename}`,\n              alt: \"processed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => analyzeImage(img),\n          className: \"btn blue\",\n          children: \"Analyze\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), analysis[img.filename] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-display\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uD83D\\uDCC8 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Sharpness:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 23\n            }, this), \" \", analysis[img.filename].variance]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uD83C\\uDF17 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Brightness:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 23\n            }, this), \" \", analysis[img.filename].mean]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uD83C\\uDF13 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Contrast:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 23\n            }, this), \" \", analysis[img.filename].contrastEstimate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 15\n        }, this)]\n      }, img._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jiW4fZRL0HKsfKMill5m8GJQ5rQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","useRef","axios","BarChart","Bar","XAxis","YAxis","Tooltip","CartesianGrid","ResponsiveContainer","toPng","jsPDF","CSVLink","jsxDEV","_jsxDEV","App","_s","image","setImage","message","setMessage","brand","setBrand","images","setImages","analysis","setAnalysis","brandSharpness","setBrandSharpness","selectedBrand","setSelectedBrand","chartRef","apiBaseUrl","process","env","REACT_APP_API_URL","handleSubmit","e","preventDefault","alert","formData","FormData","append","res","post","data","fetchImages","err","console","error","get","analyzeImage","img","filenameWithoutPrefix","filename","replace","prev","metrics","analyzeAllImages","brandGroups","variance","parseFloat","mean","contrastEstimate","push","result","Object","entries","map","stats","avgSharpness","reduce","sum","v","length","avgBrightness","avgContrast","averageSharpness","toFixed","averageBrightness","averageContrast","sort","a","b","downloadChartAsPNG","current","then","dataUrl","link","document","createElement","download","href","click","catch","downloadChartAsPDF","pdf","imgProps","getImageProperties","pdfWidth","internal","pageSize","getWidth","pdfHeight","height","width","addImage","save","filteredImages","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","target","files","value","onClick","id","ref","margin","top","right","left","bottom","strokeDasharray","dataKey","fill","name","Date","processedAt","toLocaleString","src","originalName","alt","_id","_c","$RefreshReg$"],"sources":["E:/smartphone-image-app/client/src/App.js"],"sourcesContent":["import { useEffect, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n} from 'recharts';\r\nimport { toPng } from 'html-to-image';\r\nimport jsPDF from 'jspdf';\r\nimport { CSVLink } from 'react-csv';\r\n\r\nfunction App() {\r\n  const [image, setImage] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n  const [brand, setBrand] = useState('iPhone');\r\n  const [images, setImages] = useState([]);\r\n  const [analysis, setAnalysis] = useState({});\r\n  const [brandSharpness, setBrandSharpness] = useState([]);\r\n  const [selectedBrand, setSelectedBrand] = useState('All');\r\n  const chartRef = useRef(null);\r\n\r\n  // ✅ Live backend base URL from env\r\n  const apiBaseUrl = process.env.REACT_APP_API_URL;\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!image) return alert('Please select an image');\r\n\r\n    const formData = new FormData();\r\n    formData.append('image', image);\r\n    formData.append('brand', brand);\r\n\r\n    try {\r\n      const res = await axios.post(`${apiBaseUrl}/upload`, formData);\r\n      setMessage(res.data.message);\r\n      setImage(null);\r\n      fetchImages();\r\n    } catch (err) {\r\n      console.error(err);\r\n      setMessage('Upload failed');\r\n    }\r\n  };\r\n\r\n  const fetchImages = async () => {\r\n    try {\r\n      const res = await axios.get(`${apiBaseUrl}/images`);\r\n      setImages(res.data);\r\n    } catch (err) {\r\n      console.error('Failed to fetch images', err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchImages();\r\n  }, []);\r\n\r\n  const analyzeImage = async (img) => {\r\n    try {\r\n      const filenameWithoutPrefix = img.filename.replace(/^processed-/, '');\r\n      const res = await axios.get(`${apiBaseUrl}/analyze/processed/${filenameWithoutPrefix}`);\r\n      setAnalysis((prev) => ({\r\n        ...prev,\r\n        [img.filename]: res.data.metrics,\r\n      }));\r\n    } catch (err) {\r\n      console.error('Analysis failed:', err);\r\n      alert('Analysis failed.');\r\n    }\r\n  };\r\n\r\n  const analyzeAllImages = async () => {\r\n    const brandGroups = {};\r\n\r\n    for (let img of images) {\r\n      const filename = img.filename;\r\n      const filenameWithoutPrefix = filename.replace(/^processed-/, '');\r\n\r\n      try {\r\n        const res = await axios.get(`${apiBaseUrl}/analyze/processed/${filenameWithoutPrefix}`);\r\n        const variance = parseFloat(res.data.metrics.variance);\r\n        const mean = parseFloat(res.data.metrics.mean);\r\n        const contrastEstimate = parseFloat(res.data.metrics.contrastEstimate);\r\n\r\n        if (!brandGroups[img.brand]) {\r\n          brandGroups[img.brand] = [];\r\n        }\r\n\r\n        brandGroups[img.brand].push({ variance, mean, contrastEstimate });\r\n      } catch (err) {\r\n        console.error(`Error analyzing ${filename}:`, err.message);\r\n      }\r\n    }\r\n\r\n    const result = Object.entries(brandGroups).map(([brand, stats]) => {\r\n      const avgSharpness = stats.reduce((sum, v) => sum + v.variance, 0) / stats.length;\r\n      const avgBrightness = stats.reduce((sum, v) => sum + v.mean, 0) / stats.length;\r\n      const avgContrast = stats.reduce((sum, v) => sum + v.contrastEstimate, 0) / stats.length;\r\n\r\n      return {\r\n        brand,\r\n        averageSharpness: parseFloat(avgSharpness.toFixed(2)),\r\n        averageBrightness: parseFloat(avgBrightness.toFixed(2)),\r\n        averageContrast: parseFloat(avgContrast.toFixed(2)),\r\n      };\r\n    }).sort((a, b) => b.averageSharpness - a.averageSharpness);\r\n\r\n    setBrandSharpness(result);\r\n  };\r\n\r\n  const downloadChartAsPNG = () => {\r\n    if (chartRef.current === null) return;\r\n    toPng(chartRef.current)\r\n      .then((dataUrl) => {\r\n        const link = document.createElement('a');\r\n        link.download = 'Comparison-chart.png';\r\n        link.href = dataUrl;\r\n        link.click();\r\n      })\r\n      .catch((err) => {\r\n        console.error('Error downloading PNG:', err);\r\n      });\r\n  };\r\n\r\n  const downloadChartAsPDF = () => {\r\n    if (chartRef.current === null) return;\r\n    toPng(chartRef.current)\r\n      .then((dataUrl) => {\r\n        const pdf = new jsPDF();\r\n        const imgProps = pdf.getImageProperties(dataUrl);\r\n        const pdfWidth = pdf.internal.pageSize.getWidth();\r\n        const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;\r\n\r\n        pdf.addImage(dataUrl, 'PNG', 0, 0, pdfWidth, pdfHeight);\r\n        pdf.save('Comparison-chart.pdf');\r\n      })\r\n      .catch((err) => {\r\n        console.error('Error downloading PDF:', err);\r\n      });\r\n  };\r\n\r\n  const filteredImages = selectedBrand === 'All' ? images : images.filter(img => img.brand === selectedBrand);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>📱 Smartphone Image Processor</h1>\r\n\r\n      <form onSubmit={handleSubmit} className=\"form\">\r\n        <input type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\r\n        <select onChange={(e) => setBrand(e.target.value)} value={brand}>\r\n          <option value=\"iPhone\">iPhone</option>\r\n          <option value=\"Samsung\">Samsung</option>\r\n          <option value=\"Pixel\">Pixel</option>\r\n          <option value=\"Xiaomi\">Xiaomi</option>\r\n        </select>\r\n        <button type=\"submit\" className=\"btn blue\">Upload & Process</button>\r\n        {message && <p className=\"message success\">{message}</p>}\r\n      </form>\r\n\r\n      <div className=\"controls\">\r\n        <button onClick={analyzeAllImages} className=\"btn green\">📊 Compare by Brand</button>\r\n        {brandSharpness.length > 0 && (\r\n          <CSVLink data={brandSharpness} filename=\"sharpness-report.csv\" >\r\n            <button id='csv'> 📥 Export CSV</button>\r\n          </CSVLink>\r\n        )}\r\n        <select id='brand-filter' value={selectedBrand} onChange={(e) => setSelectedBrand(e.target.value)}>\r\n          <option value=\"All\">All Brands</option>\r\n          <option value=\"iPhone\">iPhone</option>\r\n          <option value=\"Samsung\">Samsung</option>\r\n          <option value=\"Pixel\">Pixel</option>\r\n          <option value=\"Xiaomi\">Xiaomi</option>\r\n        </select>\r\n      </div>\r\n\r\n      {brandSharpness.length > 0 && (\r\n        <div className=\"chart-wrapper\" ref={chartRef}>\r\n          <h2>📊 Average Metrics by Brand</h2>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <BarChart data={brandSharpness} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"brand\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Bar dataKey=\"averageSharpness\" fill=\"#2563EB\" name=\"Sharpness\" />\r\n              <Bar dataKey=\"averageBrightness\" fill=\"#F59E0B\" name=\"Brightness\" />\r\n              <Bar dataKey=\"averageContrast\" fill=\"#10B981\" name=\"Contrast\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n          <div className=\"flex-wrap\">\r\n            <button onClick={downloadChartAsPNG} id='png'>⬇️ Download as PNG</button>\r\n            <button onClick={downloadChartAsPDF} id='pdf'>📄 Download as PDF</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <h2>🖼 Uploaded Images</h2>\r\n      <div className=\"image-gallery\">\r\n        {filteredImages.map((img) => (\r\n          <div key={img._id} className=\"image-card\">\r\n            <h3>{img.brand}</h3>\r\n            <p>{new Date(img.processedAt).toLocaleString()}</p>\r\n            <div className=\"flex-wrap\">\r\n              <div>\r\n                <p>Original</p>\r\n                <img src={`${apiBaseUrl}/uploads/${img.originalName}`} alt=\"original\" />\r\n              </div>\r\n              <div>\r\n                <p>Processed</p>\r\n                <img src={`${apiBaseUrl}/uploads/${img.filename}`} alt=\"processed\" />\r\n              </div>\r\n            </div>\r\n            <button onClick={() => analyzeImage(img)} className=\"btn blue\">Analyze</button>\r\n            {analysis[img.filename] && (\r\n              <div className=\"metric-display\">\r\n                <p>📈 <strong>Sharpness:</strong> {analysis[img.filename].variance}</p>\r\n                <p>🌗 <strong>Brightness:</strong> {analysis[img.filename].mean}</p>\r\n                <p>🌓 <strong>Contrast:</strong> {analysis[img.filename].contrastEstimate}</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}